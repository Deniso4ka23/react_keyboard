{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKey","handleKeyUp","e","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,QAASE,EAAEE,OAd/B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAO,mCACwBA,EADxB,KAEJ,kCAzBd,GAAyBU,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.d934e9fd.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    lastKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this.setState({ lastKey: e.key });\n  };\n\n  render() {\n    const { lastKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {lastKey\n            ? `The last pressed key is [${lastKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}